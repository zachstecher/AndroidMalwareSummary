/**
 * ClassLab
 * 
 * MSCS630
 * Professor Pablo Rivas
 * 
 * @author Zach Stecher
 *
 */
public class ClassLab {

	/*
	 * stringToHex
	 * 
	 * This method takes a String input and converts it to
	 * its hexadecimal representation.
	 * 
	 * Parameters: toHex
	 * Returns: hex.toString()
	 */
	public String stringToHex(String toHex){
		char[] chars = toHex.toCharArray();
		StringBuffer hex = new StringBuffer();
		
		for(int i = 0; i< chars.length; i++)
		{
			hex.append(Integer.toHexString((int) chars[i]));
		}
		
		return hex.toString();
	}
	
	/*
	 * blockCounter
	 * 
	 * This method dates a hex String and a predetermined
	 * cipher block size and creates a matrix of blocks.
	 * 
	 * Parameters: hex, bSize
	 * Returns: mHexBlocks
	 */
	public static String[][] blockSize(String m, int bSize){
	  
	  // pad "0"s in the case of block size not dividing perfectly into m
	  while ((m.length() % bSize) != 0){
	    m = m + "0";
	  }
	  int counter = 0;
	  int blocks = ((m.length() / 2) / bSize);
	  String W[][] = new String[bSize][blocks];
	 
	  for(int i = 0; i < blocks; i ++){
	    for(int j = 0; j < bSize; j++){
	      W[j][i] = m.substring(counter, (counter+2));
	      counter += 2;
	    }
	  }
	  return W;
	}
}

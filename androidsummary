\documentclass [12pt] {article}

\usepackage{pgfplots}
\pgfplotsset{compat=1.13}

\begin {document}

\title{"Dissecting Android Malware" Summary}
\author {Zach Stecher}
\date{2/6/16}
\maketitle

	\textit{Dissecting Android Malware: Characterization and Evolution} by Yajin Zhou and Xuxian Jiang seeks to explore the relatively new area of Android based malware, its growth, prevalence, and current state of solutions. While this was a relatively unexplored area at the time of the paper's writing, it is important given that the prevalence of smartphones has exploded in recent years. Zhou and Jiang present the statistic that smartphone shipments tripled from 2009-2012, from 40 million to 120 million, while the presence of Android based malware has increased by 400 percent from 2010-2012. This, coupled with a lack of a comprehensive malware database, hamstrings any potential effort to stymie the negative effects from these programs.

	The authors collected 1,260 malware samples over the course of a year, and broke them down by family. Of the samples, 36.7 percent leveraged a root-level exploit, while over 90 percent of them turned the infected phone into part of a botnet. 45.3 percent of the samples had built-in support to send out background SMS or make phone calls without user awareness, while roughly the same percentage harvested user information.

	The authors also explored the state of existing mobile anti-malware software and found them to be lacking. Of the explored options, the best case scenario caught 79.6 percent of possible malware detections, while the wost case caught only 20.2 percent. This is important to note considering the exponential increase in Android malware in recent years; more new malware was introduced in July of 2011 than all of 2010 combined.

	\begin{tikzpicture}
		\begin{axis}[
			ybar,
			ymin=0,
			width = 12cm,
			height = 5cm,
			bar width=5pt,
			ylabel=Malware Total,
			xlabel=Month and Year,
			xticklabel style={rotate=45},
			symbolic x coords = {Aug 10, Sep 10, Oct 10, Nov 10, Dec 10, Jan 11, Feb 11, Mar 11, Apr 11, May 11, Jun 11, Jul 11, Aug 11, Sep 11, Oct 11},
			xtick=data
		]
			\addplot[ybar, fill=blue] coordinates {
				(Aug 10, 13)
				(Sep 10, 13)
				(Oct 10, 13)
				(Nov 10, 14)
				(Dec 10, 18)
				(Jan 11, 23)
				(Feb 11, 33)
				(Mar 11, 66)
				(Apr 11, 66)
				(May 11, 115)
				(Jun 11, 209)
				(Jul 11, 403)
				(Aug 11, 527)
				(Sep 11, 678)
				(Oct 11, 1260)
			};
		\end{axis}
	\end{tikzpicture}

	 The authors also analyzed and categorized the ways malware comes to infect devices into four different methods. \textbf{Repackaging} describes the method by which a legitimate application (or "app") has malware added in by an attacker, and then is re-hosted for download. The app is designed to look as close to the original as possible so as to fool users into downloading it. An \textbf{Update Attack}, is very similar to Repackaging but much harder to detect. Rather than have the entirety of the malware installed in the repackaged app, the attacker installs a call to update once the app is run on the target's phone. When the user accepts the update, malware is downloaded instead. A \textbf{Drive-By Download} requires action from the user in order to succeed. Malicious apps attempt to entice users to download them, usually through advertisements. The last category encompasses things that exist outside of the first 3 methods like spyware, fake applications that masquerade as real apps, real apps that perform their intended function but also perform malicious activities in the background, or applications that exploit root vulnerabilitie to gain access to root privilege. The authors also present analysis of activation procedures and malicious payloads of the samples that go beyond the scope of this summary.

	The authors conclude that this attempt at providing a comprehensive listing of Android malware suggests a real need to develop better anti-malware solutions.

\end {document}
